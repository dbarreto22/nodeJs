import { OnInit, ElementRef, Renderer2, NgZone, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';
import { KendoDragEvent, HSVA } from './models';
/**
 * The ColorGradient component enables smooth color transitions and provides options for selecting specific colors over the drag handle.
 * The ColorGradient is independently used by `kendo-colorpicker` and can be directly added to the page.
 */
export declare class ColorGradientComponent implements OnInit, OnChanges {
    private host;
    private ngZone;
    private renderer;
    hostClasses: boolean;
    readonly disabledClass: boolean;
    readonly hostTabindex: number;
    /**
     * Defines whether the alpha slider will be displayed.
     */
    opacity: boolean;
    /**
     * Sets the disabled state of the ColorGradient.
     */
    disabled: boolean;
    /**
     * Sets the read-only state of the ColorGradient.
     */
    readonly: boolean;
    /**
     * Specifies the value of the initially selected color.
     */
    value: string;
    /**
     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.
     */
    tabindex: number;
    /**
     * Fires each time the user selects a new color.
     */
    valueChange: EventEmitter<string>;
    /**
     * @hidden
     */
    backgroundColor: string;
    /**
     * @hidden
     *
     * Represents the currently selected `hue`, `saturation`, `value`, and `alpha` values.
     * The values are initially set in `ngOnInit` or in `ngOnChanges` and are
     * updated on moving the drag handle or the sliders.
     */
    hsva: HSVA;
    /**
     * Indicates whether the ColorGradient or any of its content is focused.
     */
    readonly isFocused: boolean;
    /**
     * @hidden
     */
    readonly alphaSliderValue: number;
    private _value;
    private _tabindex;
    private format;
    private alphaSlider;
    private gradientWrapper;
    private dragHandle;
    private readonly gradientRect;
    constructor(host: ElementRef, ngZone: NgZone, renderer: Renderer2);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * Focuses the component.
     */
    focus(): void;
    /**
     * @hidden
     */
    handleDragPress(args: KendoDragEvent): void;
    /**
     * @hidden
     */
    onHandleDrag(args: any): void;
    /**
     * @hidden
     */
    onHandleRelease(): void;
    /**
     * @hidden
     */
    changePosition(position: KendoDragEvent): void;
    /**
     * @hidden
     */
    handleHueSliderChange(hue: number): void;
    /**
     * @hidden
     */
    handleAlphaSliderChange(alpha: number): void;
    /**
     * @hidden
     */
    handleInputsValueChange(color: string): void;
    private moveDragHandle(position);
    private updateUI();
    private handleValueChange(color);
    private setDragHandleElementPosition(top, left);
    private setAlphaSliderBackground(backgroundColor);
}
